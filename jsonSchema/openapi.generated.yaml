openapi: 3.0.0
info:
  title: veryExpress generated api server
  description: OpenApi Spec generated by veryExpress
  version: 1.0.0
paths:
  /user:
    summary: User
    get:
      summary: User
      operationId: getUser
      tags:
        - user
      parameters:
        - name: name
          in: query
          schema:
            type: string
            maxLength: 64
        - name: userContact
          in: query
          schema:
            type: string
            format: uuid
        - name: married
          in: query
          schema:
            type: string
            enum:
              - single
              - inRelationship
              - married
        - name: isActive
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '413':
          description: Payload Too Large
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
    post:
      summary: User
      operationId: postUser
      tags:
        - user
      parameters: []
      requestBody:
        description: post user
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postUserBody'
      responses:
        '201':
          description: Crerated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postUserResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '413':
          description: Payload Too Large
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
  /user/{id}:
    summary: User
    get:
      summary: User
      operationId: getUser
      tags:
        - user
      parameters:
        - name: name
          in: query
          schema:
            type: string
            maxLength: 64
        - name: userContact
          in: query
          schema:
            type: string
            format: uuid
        - name: married
          in: query
          schema:
            type: string
            enum:
              - single
              - inRelationship
              - married
        - name: isActive
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '413':
          description: Payload Too Large
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
    put:
      summary: User
      operationId: putUser
      tags:
        - user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: put user
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putUserBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/putUserResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '413':
          description: Payload Too Large
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
    patch:
      summary: User
      operationId: patchUser
      tags:
        - user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: patch user
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchUserBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patchUserResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '413':
          description: Payload Too Large
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
    delete:
      summary: User
      operationId: deleteUser
      tags:
        - user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '413':
          description: Payload Too Large
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
  /usercontact:
    summary: UserContact
    get:
      summary: UserContact
      operationId: getUserContact
      tags:
        - usercontact
      parameters:
        - name: phoneNo
          in: query
          schema:
            type: string
        - name: isActive
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserContactResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '413':
          description: Payload Too Large
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
    post:
      summary: UserContact
      operationId: postUserContact
      tags:
        - usercontact
      parameters: []
      requestBody:
        description: post usercontact
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postUserContactBody'
      responses:
        '201':
          description: Crerated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postUserContactResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '413':
          description: Payload Too Large
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
  /usercontact/{id}:
    summary: UserContact
    get:
      summary: UserContact
      operationId: getUserContact
      tags:
        - usercontact
      parameters:
        - name: phoneNo
          in: query
          schema:
            type: string
        - name: isActive
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserContactResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '413':
          description: Payload Too Large
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
    put:
      summary: UserContact
      operationId: putUserContact
      tags:
        - usercontact
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: put usercontact
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putUserContactBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/putUserContactResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '413':
          description: Payload Too Large
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
    patch:
      summary: UserContact
      operationId: patchUserContact
      tags:
        - usercontact
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: patch usercontact
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchUserContactBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patchUserContactResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '413':
          description: Payload Too Large
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
    delete:
      summary: UserContact
      operationId: deleteUserContact
      tags:
        - usercontact
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '413':
          description: Payload Too Large
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
components:
  schemas:
    getUserResponse:
      type: object
      properties:
        _id:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 64
        userContact:
          type: string
          format: uuid
        married:
          type: string
          enum:
            - single
            - inRelationship
            - married
        userAddress:
          type: object
          properties:
            line1:
              type: string
            line2:
              type: string
            city:
              type: string
            state:
              type: string
            country:
              type: string
              enum:
                - Option1
                - Option2
                - Option3
            zip:
              type: string
        isActive:
          type: boolean
    getUserResponseList:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
            format: uuid
          name:
            type: string
            maxLength: 64
          userContact:
            type: string
            format: uuid
          married:
            type: string
            enum:
              - single
              - inRelationship
              - married
          userAddress:
            type: object
            properties:
              line1:
                type: string
              line2:
                type: string
              city:
                type: string
              state:
                type: string
              country:
                type: string
                enum:
                  - Option1
                  - Option2
                  - Option3
              zip:
                type: string
          isActive:
            type: boolean
    postUserBody:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
        userContact:
          type: string
          format: uuid
        married:
          type: string
          enum:
            - single
            - inRelationship
            - married
        userAddress:
          type: object
          properties:
            line1:
              type: string
            line2:
              type: string
            city:
              type: string
            state:
              type: string
            country:
              type: string
              enum:
                - Option1
                - Option2
                - Option3
            zip:
              type: string
        isActive:
          type: boolean
    postUserResponse:
      type: object
      properties:
        _id:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 64
        userContact:
          type: string
          format: uuid
        married:
          type: string
          enum:
            - single
            - inRelationship
            - married
        userAddress:
          type: object
          properties:
            line1:
              type: string
            line2:
              type: string
            city:
              type: string
            state:
              type: string
            country:
              type: string
              enum:
                - Option1
                - Option2
                - Option3
            zip:
              type: string
        isActive:
          type: boolean
    putUserBody:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
        userContact:
          type: string
          format: uuid
        married:
          type: string
          enum:
            - single
            - inRelationship
            - married
        userAddress:
          type: object
          properties:
            line1:
              type: string
            line2:
              type: string
            city:
              type: string
            state:
              type: string
            country:
              type: string
              enum:
                - Option1
                - Option2
                - Option3
            zip:
              type: string
        isActive:
          type: boolean
    putUserResponse:
      type: object
      properties:
        _id:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 64
        userContact:
          type: string
          format: uuid
        married:
          type: string
          enum:
            - single
            - inRelationship
            - married
        userAddress:
          type: object
          properties:
            line1:
              type: string
            line2:
              type: string
            city:
              type: string
            state:
              type: string
            country:
              type: string
              enum:
                - Option1
                - Option2
                - Option3
            zip:
              type: string
        isActive:
          type: boolean
    patchUserBody:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
        userContact:
          type: string
          format: uuid
        married:
          type: string
          enum:
            - single
            - inRelationship
            - married
        userAddress:
          type: object
          properties:
            line1:
              type: string
            line2:
              type: string
            city:
              type: string
            state:
              type: string
            country:
              type: string
              enum:
                - Option1
                - Option2
                - Option3
            zip:
              type: string
        isActive:
          type: boolean
    patchUserResponse:
      type: object
      properties:
        _id:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 64
        userContact:
          type: string
          format: uuid
        married:
          type: string
          enum:
            - single
            - inRelationship
            - married
        userAddress:
          type: object
          properties:
            line1:
              type: string
            line2:
              type: string
            city:
              type: string
            state:
              type: string
            country:
              type: string
              enum:
                - Option1
                - Option2
                - Option3
            zip:
              type: string
        isActive:
          type: boolean
    getUserContactResponse:
      type: object
      properties:
        _id:
          type: string
          format: uuid
        phoneNo:
          type: string
        isActive:
          type: boolean
          default: true
    getUserContactResponseList:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
            format: uuid
          phoneNo:
            type: string
          isActive:
            type: boolean
            default: true
    postUserContactBody:
      type: object
      properties:
        phoneNo:
          type: string
        isActive:
          type: boolean
          default: true
    postUserContactResponse:
      type: object
      properties:
        _id:
          type: string
          format: uuid
        phoneNo:
          type: string
        isActive:
          type: boolean
          default: true
    putUserContactBody:
      type: object
      properties:
        phoneNo:
          type: string
        isActive:
          type: boolean
          default: true
    putUserContactResponse:
      type: object
      properties:
        _id:
          type: string
          format: uuid
        phoneNo:
          type: string
        isActive:
          type: boolean
          default: true
    patchUserContactBody:
      type: object
      properties:
        phoneNo:
          type: string
        isActive:
          type: boolean
          default: true
    patchUserContactResponse:
      type: object
      properties:
        _id:
          type: string
          format: uuid
        phoneNo:
          type: string
        isActive:
          type: boolean
          default: true
