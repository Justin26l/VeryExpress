import * as types from "../types/types";
import pkg from "../../package.json";

export function getDefaultHeaderComment(): string {
    return `/**
 * Generated by veryExpress@${pkg.version} 
 * https://github.com/Justin26l/VeryExpress
 */
`;
}

export function getStaticHeaderComment(): string {
    return `/**
 * Generated by veryExpress 
 * https://github.com/Justin26l/VeryExpress
 */
`;
}

export function getSimpleHeaderComment(): string {
    return `// Generated by veryExpress@${pkg.version}`;
}

export function getSimpleStaticHeaderComment(): string {
    return "// Generated by veryExpress";
}

export function OAuthProviders(compilerOptions: types.compilerOptions): string[] {
    return Object.keys(compilerOptions.sso.oauthProviders!).filter((key) => {
        return compilerOptions.sso.oauthProviders![key] === true;
    });
}

export function isOAuthEnabled(compilerOptions: types.compilerOptions): boolean {
    return OAuthProviders(compilerOptions).length > 0;
}

export const defaultCompilerOptions: types.compilerOptions = {

    rootDir: ".",
    srcDir: "./src",
    sysDir: "./src/system",
    jsonSchemaDir: "./jsonSchema",
    openapiDir: "./openapi",
    generator: {
        disableVersionLabel: false,
        commitBeforeGenerate: false,
    },
    app: {
        enableSwagger: true,
        useUserSchema: true,
        useStatefulRedisAuth: false,
        useObjectID: true,
        allowApiCreateUpdate_id: false,
    },
    useRBAC: {
        roles: ["user"],
        default: "user",
        schemaIncluded: ["user"],
    },
    sso: {
        useHttpOnlyCookieToken: false,
        oauthProviders: {
            google: false,
            microsoft: false,
            apple: false,
            github: false,
        },
    },
    _:{
        headerComment: "",
        writtedDir: [],
    }
};

export default {
    defaultCompilerOptions,
    getDefaultHeaderComment,
    getStaticHeaderComment,
    getSimpleHeaderComment,
    getSimpleStaticHeaderComment,
    OAuthProviders,
    isOAuthEnabled,
};