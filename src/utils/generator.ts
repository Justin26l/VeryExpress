import * as types from "../types/types";
import pkg from "../../package.json";

export function getGenaratorHeaderComment(): string {
    return `/**
 * Generated by veryExpress@${pkg.version} 
 * https://github.com/Justin26l/VeryExpress
 * author: ${pkg.author}
 */
`;
}

export function getSimpleHeaderComment(): string {
    return `// Generated by veryExpress@${pkg.version}`;
}

export function isUseOAuth(compilerOptions: types.compilerOptions):string[] {
    return Object.keys(compilerOptions.useOauth!).filter((key) => {
        return compilerOptions.useOauth![key] === true;
    });
}

export const defaultCompilerOptions: types.compilerOptions = {
    headerComment: "// generated files by very-express",
    commitBeforeGenerate: false,

    rootDir: ".",
    srcDir: "./src",
    sysDir: "./src/system",
    jsonSchemaDir: "./jsonSchema",
    openapiDir: "./openapi",
    writtedDir: [],
    
    app: {
        enableSwagger: true,
        useUserSchema: true,
        useObjectID: true,
        allowApiCreateUpdate_id: false,
    },
    useRBAC: {
        roles: ["user"],
        default: "user",
        schemaIncluded: ["user"],
    },
    useOauth: {
        google: false,
        microsoft: false,
        apple: false,
        github: false,
    },

};

export default {
    defaultCompilerOptions,
    getGenaratorHeaderComment,
    getSimpleHeaderComment,
    isUseOAuth,
};